# Instagram Follower Analysis Tool - .gitignore
# Industry standard patterns for sensitive data and generated content

# =============================================================================
# SENSITIVE DATA & CREDENTIALS
# =============================================================================

# Instagram API credentials and curl commands
instagram_curl.txt
*.curl
*_credentials.txt
*_auth.txt

# Instagram session data and cookies
*_session.txt
*_cookies.txt
session_*.txt
cookies_*.txt

# API keys and tokens (generic patterns)
*.key
*.token
*_key.txt
*_token.txt
api_key.txt
access_token.txt

# =============================================================================
# COLLECTED DATA & OUTPUT FILES
# =============================================================================

# Instagram data directory (contains user lists)
instagram_data/
data/
output/
results/

# Data files (various formats)
*.json
*.csv
*.txt
!requirements.txt
!README.md
!*.py
!*.bat

# Specific data files to ignore
followers.txt
following.txt
users_not_following_back.txt
*_followers.txt
*_following.txt
*_analysis.txt

# =============================================================================
# PYTHON SPECIFIC
# =============================================================================

# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
Pipfile.lock

# PEP 582
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# =============================================================================
# OPERATING SYSTEM SPECIFIC
# =============================================================================

# Windows
Thumbs.db
Thumbs.db:encryptable
ehthumbs.db
ehthumbs_vista.db
*.tmp
*.temp
Desktop.ini
$RECYCLE.BIN/
*.cab
*.msi
*.msix
*.msm
*.msp
*.lnk

# macOS
.DS_Store
.AppleDouble
.LSOverride
Icon
._*
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.TemporaryItems
.Trashes
.VolumeIcon.icns
.com.apple.timemachine.donotpresent
.AppleDB
.AppleDesktop
Network Trash Folder
Temporary Items
.apdisk

# Linux
*~
.fuse_hidden*
.directory
.Trash-*
.nfs*

# =============================================================================
# DEVELOPMENT & EDITOR FILES
# =============================================================================

# IDE and editor files
.vscode/
.idea/
*.swp
*.swo
*~
.project
.classpath
.settings/
*.sublime-project
*.sublime-workspace

# Backup files
*.bak
*.backup
*.old
*.orig
*.save

# Temporary files
*.tmp
*.temp
*.log
*.pid
*.seed
*.pid.lock

# =============================================================================
# SECURITY & PRIVACY
# =============================================================================

# Personal information
personal_*.txt
private_*.txt
*_private.txt
*_personal.txt

# Database files
*.db
*.sqlite
*.sqlite3

# Configuration files with sensitive data
config.ini
settings.json
.env.local
.env.production
.env.staging

# =============================================================================
# PROJECT SPECIFIC
# =============================================================================

# Instagram analysis specific patterns
*_analysis_results.txt
*_report.txt
*_summary.txt
instagram_*.json
instagram_*.csv
instagram_*.txt
!instagram_api_scraper.py

# Example files (safe to commit)
!*.example
!*.sample
!*.template

# =============================================================================
# LOGS & DEBUG FILES
# =============================================================================

# Log files
*.log
logs/
debug/
error_log.txt
access_log.txt

# Debug files
*.debug
debug_*.txt
*_debug.txt

# =============================================================================
# ARCHIVE & COMPRESSED FILES
# =============================================================================

# Archive files
*.7z
*.dmg
*.gz
*.iso
*.jar
*.rar
*.tar
*.zip
*.zipx

# =============================================================================
# NETWORK & PROXY FILES
# =============================================================================

# Network configuration
*.pem
*.p12
*.pfx
*.key
*.crt
*.csr

# =============================================================================
# FINAL NOTES
# =============================================================================

# This .gitignore ensures that:
# 1. No Instagram credentials are ever committed
# 2. No user data is ever committed  
# 3. No sensitive API keys or tokens are committed
# 4. Only source code and documentation are tracked
# 5. Follows industry standards for Python projects
# 6. Protects user privacy and data security

# If you need to share example data, create .example files:
# instagram_data_example/ 